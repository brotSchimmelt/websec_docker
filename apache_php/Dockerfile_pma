## This Dockerfile provides an Apache Webserver with PHP AND phpMyAdmin

# this image is based of the phpMyAdmin image (which is based on php-apache:latest)
FROM phpmyadmin/phpmyadmin:latest

# Document Root
ENV APACHE_DOCUMENT_ROOT=/var/www/html/public
# proxy server for the wwu network
# ENV http_proxy http://wwwproxy.uni-muenster.de:3128
# ENV https_proxy http://wwwproxy.uni-muenster.de:3128
# timezones
ENV TIMEZONE="Europe/Berlin"

# Set the new document root
RUN sed -ri -e "s!/var/www/html!${APACHE_DOCUMENT_ROOT}!g" /etc/apache2/sites-available/*.conf
RUN sed -ri -e "s!/var/www/!${APACHE_DOCUMENT_ROOT}!g" /etc/apache2/apache2.conf /etc/apache2/conf-available/*.conf

# get mail credentials
ARG mail_pwd
ENV MAIL_PWD $mail_pwd
ARG mail_add
ENV MAIL_ADD $mail_add
ARG mail_usr
ENV MAIL_USR $mail_usr
ARG mail_ser
ENV MAIL_SER $mail_ser
ARG mail_por
ENV MAIL_POR $mail_por

# Install mSMTP and mbstring (libonig-dev)
RUN apt-get update && apt-get install msmtp libonig-dev -y 
# Copy the mSMTP config file
COPY msmtprc.txt /etc/msmtprc
RUN sed -i "s!password_placeholder!${MAIL_PWD}!g" /etc/msmtprc
RUN sed -i "s!address_placeholder!${MAIL_ADD}!g" /etc/msmtprc
RUN sed -i "s!user_placeholder!${MAIL_USR}!g" /etc/msmtprc
RUN sed -i "s!server_placeholder!${MAIL_SER}!g" /etc/msmtprc
RUN sed -i "s!port_placeholder!${MAIL_POR}!g" /etc/msmtprc
RUN chmod 600 /etc/msmtprc
RUN chown www-data:www-data /etc/msmtprc
RUN mkdir /var/log/msmtp
RUN chown www-data:www-data /var/log/msmtp/

# Use the php.ini-development
RUN mv /usr/local/etc/php/php.ini-production /usr/local/etc/php/php.ini

# Set mSMTP as the default MTA in the php.ini
RUN sed -i "s!;sendmail_path =!sendmail_path = /usr/bin/msmtp -t!g" /usr/local/etc/php/php.ini

# Set the PHP timezone in the php.ini
RUN sed -i "s!;date.timezone =!date.timezone = ${TIMEZONE}!g" /usr/local/etc/php/php.ini
# Set the sytem timezone
RUN ln -snf /usr/share/zoneinfo/$TIMEZONE /etc/localtime && echo $TIMEZONE > /etc/timezone

# Make sure the PHP session cookie can not be accidently changed by JavaScript in the XSS challenge
RUN sed -i "s!session.cookie_httponly =!session.cookie_httponly =1!g" /usr/local/etc/php/php.ini

# Make sure all neccessary php packages are installed
## pdo & pdo_mysql: for the DB connection
RUN docker-php-ext-install pdo pdo_mysql

# copy webserver files and phpMyAdmin to Document Root
RUN mkdir -p /var/www/pma_backup/
RUN mv /var/www/html/* /var/www/pma_backup/
COPY www/ /tmp/www
RUN mv /tmp/www /var/www
RUN mv /var/www/www/* /var/www/html
RUN rm -rf /var/www/www
RUN chown www-data /var/www/html/data/
RUN mv /var/www/pma_backup /var/www/html/public/e6rs82wdj94qsfgb

# add .htaccess to restrict access to phpMyAdmin
COPY .htaccess /var/www/html/public/e6rs82wdj94qsfgb/.htaccess
COPY .htpasswd /etc/phpmyadmin/.htpasswd
